{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport Modal from 'react-modal';\n\nvar PopUp = /*#__PURE__*/function (_Component) {\n  _inherits(PopUp, _Component);\n\n  var _super = _createSuper(PopUp);\n\n  function PopUp(props) {\n    var _this;\n\n    _classCallCheck(this, PopUp);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      modalIsOpen: false\n    };\n    _this.opneModal = _this.opneModal.bind(_assertThisInitialized(_this));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PopUp, [{\n    key: \"opneModal\",\n    value: function opneModal() {\n      this.setState({\n        modalIsOpen: true\n      });\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        modalIsOpen: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"button\", {\n        onClick: this.opneModal\n      }, \"Open\"), __jsx(Modal, {\n        isOpen: this.state.modalIsOpen,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.closeModal,\n        contentLabel: \"Example Modal\"\n      }, __jsx(\"h1\", null, \"\\u4F5C\\u6210\\u4E2D...........\")));\n    }\n  }]);\n\n  return PopUp;\n}(Component);\n\n;\nexport default PopUp;","map":null,"metadata":{},"sourceType":"module"}